scriptencoding utf-8
set encoding=utf-8
set guifont=*
set nu                         " set number line
set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

set t_Co=256
set ttimeoutlen=50

" let Vundle manage Vundle
"required! 
Bundle 'gmarik/vundle'
Bundle 'cespare/vim-golang'
Bundle 'Blackrush/vim-gocode'
"Bundle 'bling/vim-airline'
Bundle 'ayang/AutoComplPop'

Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"
Bundle 'tpope/vim-fugitive'
Bundle 'itchyny/lightline.vim'
Bundle 'itchyny/landscape.vim'

let g:SuperTabDefaultCompletionType = "context"


set laststatus=2 " status line always visible

au Filetype go set makeprg=go\ build\ ./...
nmap <F5> :make<CR>:copen<CR>

set shiftwidth=4
set tabstop=4

filetype off
filetype plugin indent off
set runtimepath+=$GOROOT/misc/vim
filetype plugin indent on
filetype plugin on
syntax on
au FileType c,cpp,objc,objcpp,java,go call rainbow#load()
au FileType go au BufWritePre <buffer> Fmt

" vim-airline
"let g:airline_powerline_fonts=1
"let g:airline_theme = 'understated'
"let g:airline_left_sep = '▶'
"let g:airline_left_sep = ' '
"let g:airline_right_sep = '«'
"let g:airline_linecolumn_prefix = '␊'
"let g:airline_branch_prefix = '⎇'


let g:lightline = {
      \ 'colorscheme': 'solarized',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'fugitive', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component': {
      \   'readonly': '%{&filetype=="help"?"":&readonly?"":""}',
      \   'modified': '%{&filetype=="help"?"":&modified?"+":&modifiable?"":"-"}',
      \   'fugitive': '%{exists("*fugitive#head")?fugitive#head():"||"}'
      \ },
      \ 'component_visible_condition': {
      \   'readonly': '(&filetype!="help"&& &readonly)',
      \   'modified': '(&filetype!="help"&&(&modified||!&modifiable))',
      \   'fugitive': '(exists("*fugitive#head") && ""!=fugitive#head())'
      \ },
      \ }
